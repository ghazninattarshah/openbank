// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/kyc/all.proto

package kyc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddKYCCheckRequest struct {
	KYCCheckID           string               `protobuf:"bytes,1,opt,name=KYCCheckID,json=kyc_check_id,proto3" json:"KYCCheckID,omitempty"`
	CustomerID           string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,3,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	How                  string               `protobuf:"bytes,5,opt,name=How,json=how,proto3" json:"How,omitempty"`
	StaffUserID          string               `protobuf:"bytes,6,opt,name=StaffUserID,json=staff_user_id,proto3" json:"StaffUserID,omitempty"`
	StaffName            string               `protobuf:"bytes,7,opt,name=StaffName,json=staff_name,proto3" json:"StaffName,omitempty"`
	Satisfied            bool                 `protobuf:"varint,8,opt,name=Satisfied,json=satisfied,proto3" json:"Satisfied,omitempty"`
	Comments             string               `protobuf:"bytes,9,opt,name=Comments,json=comments,proto3" json:"Comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddKYCCheckRequest) Reset()         { *m = AddKYCCheckRequest{} }
func (m *AddKYCCheckRequest) String() string { return proto.CompactTextString(m) }
func (*AddKYCCheckRequest) ProtoMessage()    {}
func (*AddKYCCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{0}
}

func (m *AddKYCCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKYCCheckRequest.Unmarshal(m, b)
}
func (m *AddKYCCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKYCCheckRequest.Marshal(b, m, deterministic)
}
func (m *AddKYCCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKYCCheckRequest.Merge(m, src)
}
func (m *AddKYCCheckRequest) XXX_Size() int {
	return xxx_messageInfo_AddKYCCheckRequest.Size(m)
}
func (m *AddKYCCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKYCCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddKYCCheckRequest proto.InternalMessageInfo

func (m *AddKYCCheckRequest) GetKYCCheckID() string {
	if m != nil {
		return m.KYCCheckID
	}
	return ""
}

func (m *AddKYCCheckRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddKYCCheckRequest) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddKYCCheckRequest) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *AddKYCCheckRequest) GetHow() string {
	if m != nil {
		return m.How
	}
	return ""
}

func (m *AddKYCCheckRequest) GetStaffUserID() string {
	if m != nil {
		return m.StaffUserID
	}
	return ""
}

func (m *AddKYCCheckRequest) GetStaffName() string {
	if m != nil {
		return m.StaffName
	}
	return ""
}

func (m *AddKYCCheckRequest) GetSatisfied() bool {
	if m != nil {
		return m.Satisfied
	}
	return false
}

func (m *AddKYCCheckRequest) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

type AddKYCCheckResponse struct {
	BankID               string               `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CustomerID           string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	ID                   string               `protobuf:"bytes,3,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,4,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	How                  string               `protobuf:"bytes,6,opt,name=How,json=how,proto3" json:"How,omitempty"`
	StaffUserID          string               `protobuf:"bytes,7,opt,name=StaffUserID,json=staff_user_id,proto3" json:"StaffUserID,omitempty"`
	StaffName            string               `protobuf:"bytes,8,opt,name=StaffName,json=staff_name,proto3" json:"StaffName,omitempty"`
	Satisfied            bool                 `protobuf:"varint,9,opt,name=Satisfied,json=satisfied,proto3" json:"Satisfied,omitempty"`
	Comments             string               `protobuf:"bytes,10,opt,name=Comments,json=comments,proto3" json:"Comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddKYCCheckResponse) Reset()         { *m = AddKYCCheckResponse{} }
func (m *AddKYCCheckResponse) String() string { return proto.CompactTextString(m) }
func (*AddKYCCheckResponse) ProtoMessage()    {}
func (*AddKYCCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{1}
}

func (m *AddKYCCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKYCCheckResponse.Unmarshal(m, b)
}
func (m *AddKYCCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKYCCheckResponse.Marshal(b, m, deterministic)
}
func (m *AddKYCCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKYCCheckResponse.Merge(m, src)
}
func (m *AddKYCCheckResponse) XXX_Size() int {
	return xxx_messageInfo_AddKYCCheckResponse.Size(m)
}
func (m *AddKYCCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKYCCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddKYCCheckResponse proto.InternalMessageInfo

func (m *AddKYCCheckResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *AddKYCCheckResponse) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddKYCCheckResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *AddKYCCheckResponse) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddKYCCheckResponse) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *AddKYCCheckResponse) GetHow() string {
	if m != nil {
		return m.How
	}
	return ""
}

func (m *AddKYCCheckResponse) GetStaffUserID() string {
	if m != nil {
		return m.StaffUserID
	}
	return ""
}

func (m *AddKYCCheckResponse) GetStaffName() string {
	if m != nil {
		return m.StaffName
	}
	return ""
}

func (m *AddKYCCheckResponse) GetSatisfied() bool {
	if m != nil {
		return m.Satisfied
	}
	return false
}

func (m *AddKYCCheckResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

type AddKYCDocumentRequest struct {
	KYCDocumentID        string               `protobuf:"bytes,1,opt,name=KYCDocumentID,json=kyc_document_id,proto3" json:"KYCDocumentID,omitempty"`
	CustomerID           string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,3,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Type                 string               `protobuf:"bytes,4,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Number               string               `protobuf:"bytes,5,opt,name=Number,json=number,proto3" json:"Number,omitempty"`
	IssueDate            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=IssueDate,json=issue_date,proto3" json:"IssueDate,omitempty"`
	IssuePlace           string               `protobuf:"bytes,7,opt,name=IssuePlace,json=issue_place,proto3" json:"IssuePlace,omitempty"`
	ExpiryDate           *timestamp.Timestamp `protobuf:"bytes,8,opt,name=ExpiryDate,json=expiry_date,proto3" json:"ExpiryDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddKYCDocumentRequest) Reset()         { *m = AddKYCDocumentRequest{} }
func (m *AddKYCDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*AddKYCDocumentRequest) ProtoMessage()    {}
func (*AddKYCDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{2}
}

func (m *AddKYCDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKYCDocumentRequest.Unmarshal(m, b)
}
func (m *AddKYCDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKYCDocumentRequest.Marshal(b, m, deterministic)
}
func (m *AddKYCDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKYCDocumentRequest.Merge(m, src)
}
func (m *AddKYCDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_AddKYCDocumentRequest.Size(m)
}
func (m *AddKYCDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKYCDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddKYCDocumentRequest proto.InternalMessageInfo

func (m *AddKYCDocumentRequest) GetKYCDocumentID() string {
	if m != nil {
		return m.KYCDocumentID
	}
	return ""
}

func (m *AddKYCDocumentRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddKYCDocumentRequest) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddKYCDocumentRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddKYCDocumentRequest) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *AddKYCDocumentRequest) GetIssueDate() *timestamp.Timestamp {
	if m != nil {
		return m.IssueDate
	}
	return nil
}

func (m *AddKYCDocumentRequest) GetIssuePlace() string {
	if m != nil {
		return m.IssuePlace
	}
	return ""
}

func (m *AddKYCDocumentRequest) GetExpiryDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryDate
	}
	return nil
}

type AddKYCDocumentResponse struct {
	BankID               string               `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CustomerID           string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	ID                   string               `protobuf:"bytes,3,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,4,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Type                 string               `protobuf:"bytes,5,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Number               string               `protobuf:"bytes,6,opt,name=Number,json=number,proto3" json:"Number,omitempty"`
	IssueDate            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=IssueDate,json=issue_date,proto3" json:"IssueDate,omitempty"`
	IssuePlace           string               `protobuf:"bytes,8,opt,name=IssuePlace,json=issue_place,proto3" json:"IssuePlace,omitempty"`
	ExpiryDate           *timestamp.Timestamp `protobuf:"bytes,9,opt,name=ExpiryDate,json=expiry_date,proto3" json:"ExpiryDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddKYCDocumentResponse) Reset()         { *m = AddKYCDocumentResponse{} }
func (m *AddKYCDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*AddKYCDocumentResponse) ProtoMessage()    {}
func (*AddKYCDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{3}
}

func (m *AddKYCDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKYCDocumentResponse.Unmarshal(m, b)
}
func (m *AddKYCDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKYCDocumentResponse.Marshal(b, m, deterministic)
}
func (m *AddKYCDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKYCDocumentResponse.Merge(m, src)
}
func (m *AddKYCDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_AddKYCDocumentResponse.Size(m)
}
func (m *AddKYCDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKYCDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddKYCDocumentResponse proto.InternalMessageInfo

func (m *AddKYCDocumentResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *AddKYCDocumentResponse) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddKYCDocumentResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *AddKYCDocumentResponse) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddKYCDocumentResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddKYCDocumentResponse) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *AddKYCDocumentResponse) GetIssueDate() *timestamp.Timestamp {
	if m != nil {
		return m.IssueDate
	}
	return nil
}

func (m *AddKYCDocumentResponse) GetIssuePlace() string {
	if m != nil {
		return m.IssuePlace
	}
	return ""
}

func (m *AddKYCDocumentResponse) GetExpiryDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryDate
	}
	return nil
}

type AddKYCMediaRequest struct {
	KYCMediaID             string               `protobuf:"bytes,1,opt,name=KYCMediaID,json=kyc_media_id,proto3" json:"KYCMediaID,omitempty"`
	CustomerID             string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	CustomerNumber         string               `protobuf:"bytes,3,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Type                   string               `protobuf:"bytes,4,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	URL                    string               `protobuf:"bytes,5,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	Date                   *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	RelatesToKycDocumentID string               `protobuf:"bytes,7,opt,name=RelatesToKycDocumentID,json=relates_to_kyc_document_id,proto3" json:"RelatesToKycDocumentID,omitempty"`
	RelatesToKycCheckID    string               `protobuf:"bytes,8,opt,name=RelatesToKycCheckID,json=relates_to_kyc_check_id,proto3" json:"RelatesToKycCheckID,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *AddKYCMediaRequest) Reset()         { *m = AddKYCMediaRequest{} }
func (m *AddKYCMediaRequest) String() string { return proto.CompactTextString(m) }
func (*AddKYCMediaRequest) ProtoMessage()    {}
func (*AddKYCMediaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{4}
}

func (m *AddKYCMediaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKYCMediaRequest.Unmarshal(m, b)
}
func (m *AddKYCMediaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKYCMediaRequest.Marshal(b, m, deterministic)
}
func (m *AddKYCMediaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKYCMediaRequest.Merge(m, src)
}
func (m *AddKYCMediaRequest) XXX_Size() int {
	return xxx_messageInfo_AddKYCMediaRequest.Size(m)
}
func (m *AddKYCMediaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKYCMediaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddKYCMediaRequest proto.InternalMessageInfo

func (m *AddKYCMediaRequest) GetKYCMediaID() string {
	if m != nil {
		return m.KYCMediaID
	}
	return ""
}

func (m *AddKYCMediaRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddKYCMediaRequest) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddKYCMediaRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddKYCMediaRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *AddKYCMediaRequest) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *AddKYCMediaRequest) GetRelatesToKycDocumentID() string {
	if m != nil {
		return m.RelatesToKycDocumentID
	}
	return ""
}

func (m *AddKYCMediaRequest) GetRelatesToKycCheckID() string {
	if m != nil {
		return m.RelatesToKycCheckID
	}
	return ""
}

type AddKYCMediaResponse struct {
	BankID                 string               `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CustomerID             string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	ID                     string               `protobuf:"bytes,3,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	CustomerNumber         string               `protobuf:"bytes,4,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Type                   string               `protobuf:"bytes,5,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	URL                    string               `protobuf:"bytes,6,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	Date                   *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	RelatesToKycDocumentID string               `protobuf:"bytes,8,opt,name=RelatesToKycDocumentID,json=relates_to_kyc_document_id,proto3" json:"RelatesToKycDocumentID,omitempty"`
	RelatesToKycCheckID    string               `protobuf:"bytes,9,opt,name=RelatesToKycCheckID,json=relates_to_kyc_check_id,proto3" json:"RelatesToKycCheckID,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *AddKYCMediaResponse) Reset()         { *m = AddKYCMediaResponse{} }
func (m *AddKYCMediaResponse) String() string { return proto.CompactTextString(m) }
func (*AddKYCMediaResponse) ProtoMessage()    {}
func (*AddKYCMediaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{5}
}

func (m *AddKYCMediaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKYCMediaResponse.Unmarshal(m, b)
}
func (m *AddKYCMediaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKYCMediaResponse.Marshal(b, m, deterministic)
}
func (m *AddKYCMediaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKYCMediaResponse.Merge(m, src)
}
func (m *AddKYCMediaResponse) XXX_Size() int {
	return xxx_messageInfo_AddKYCMediaResponse.Size(m)
}
func (m *AddKYCMediaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKYCMediaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddKYCMediaResponse proto.InternalMessageInfo

func (m *AddKYCMediaResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *AddKYCMediaResponse) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddKYCMediaResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *AddKYCMediaResponse) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddKYCMediaResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddKYCMediaResponse) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *AddKYCMediaResponse) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *AddKYCMediaResponse) GetRelatesToKycDocumentID() string {
	if m != nil {
		return m.RelatesToKycDocumentID
	}
	return ""
}

func (m *AddKYCMediaResponse) GetRelatesToKycCheckID() string {
	if m != nil {
		return m.RelatesToKycCheckID
	}
	return ""
}

type AddKYCStatusRequest struct {
	CustomerID           string               `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,2,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Ok                   bool                 `protobuf:"varint,3,opt,name=Ok,json=ok,proto3" json:"Ok,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddKYCStatusRequest) Reset()         { *m = AddKYCStatusRequest{} }
func (m *AddKYCStatusRequest) String() string { return proto.CompactTextString(m) }
func (*AddKYCStatusRequest) ProtoMessage()    {}
func (*AddKYCStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{6}
}

func (m *AddKYCStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKYCStatusRequest.Unmarshal(m, b)
}
func (m *AddKYCStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKYCStatusRequest.Marshal(b, m, deterministic)
}
func (m *AddKYCStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKYCStatusRequest.Merge(m, src)
}
func (m *AddKYCStatusRequest) XXX_Size() int {
	return xxx_messageInfo_AddKYCStatusRequest.Size(m)
}
func (m *AddKYCStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKYCStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddKYCStatusRequest proto.InternalMessageInfo

func (m *AddKYCStatusRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddKYCStatusRequest) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddKYCStatusRequest) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddKYCStatusRequest) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type AddKYCStatusResponse struct {
	CustomerID           string               `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,2,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Ok                   bool                 `protobuf:"varint,3,opt,name=Ok,json=ok,proto3" json:"Ok,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddKYCStatusResponse) Reset()         { *m = AddKYCStatusResponse{} }
func (m *AddKYCStatusResponse) String() string { return proto.CompactTextString(m) }
func (*AddKYCStatusResponse) ProtoMessage()    {}
func (*AddKYCStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{7}
}

func (m *AddKYCStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKYCStatusResponse.Unmarshal(m, b)
}
func (m *AddKYCStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKYCStatusResponse.Marshal(b, m, deterministic)
}
func (m *AddKYCStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKYCStatusResponse.Merge(m, src)
}
func (m *AddKYCStatusResponse) XXX_Size() int {
	return xxx_messageInfo_AddKYCStatusResponse.Size(m)
}
func (m *AddKYCStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKYCStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddKYCStatusResponse proto.InternalMessageInfo

func (m *AddKYCStatusResponse) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddKYCStatusResponse) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddKYCStatusResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddKYCStatusResponse) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type Check struct {
	BankID               string               `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CustomerID           string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	ID                   string               `protobuf:"bytes,3,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,4,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	How                  string               `protobuf:"bytes,6,opt,name=How,json=how,proto3" json:"How,omitempty"`
	StaffUserID          string               `protobuf:"bytes,7,opt,name=StaffUserID,json=staff_user_id,proto3" json:"StaffUserID,omitempty"`
	StaffName            string               `protobuf:"bytes,8,opt,name=StaffName,json=staff_name,proto3" json:"StaffName,omitempty"`
	Satisfied            bool                 `protobuf:"varint,9,opt,name=Satisfied,json=satisfied,proto3" json:"Satisfied,omitempty"`
	Comments             string               `protobuf:"bytes,10,opt,name=Comments,json=comments,proto3" json:"Comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Check) Reset()         { *m = Check{} }
func (m *Check) String() string { return proto.CompactTextString(m) }
func (*Check) ProtoMessage()    {}
func (*Check) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{8}
}

func (m *Check) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Check.Unmarshal(m, b)
}
func (m *Check) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Check.Marshal(b, m, deterministic)
}
func (m *Check) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Check.Merge(m, src)
}
func (m *Check) XXX_Size() int {
	return xxx_messageInfo_Check.Size(m)
}
func (m *Check) XXX_DiscardUnknown() {
	xxx_messageInfo_Check.DiscardUnknown(m)
}

var xxx_messageInfo_Check proto.InternalMessageInfo

func (m *Check) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *Check) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *Check) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Check) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *Check) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Check) GetHow() string {
	if m != nil {
		return m.How
	}
	return ""
}

func (m *Check) GetStaffUserID() string {
	if m != nil {
		return m.StaffUserID
	}
	return ""
}

func (m *Check) GetStaffName() string {
	if m != nil {
		return m.StaffName
	}
	return ""
}

func (m *Check) GetSatisfied() bool {
	if m != nil {
		return m.Satisfied
	}
	return false
}

func (m *Check) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

type Document struct {
	BankID               string               `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CustomerID           string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	ID                   string               `protobuf:"bytes,3,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,4,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Type                 string               `protobuf:"bytes,5,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Number               string               `protobuf:"bytes,6,opt,name=Number,json=number,proto3" json:"Number,omitempty"`
	IssueDate            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=IssueDate,json=issue_date,proto3" json:"IssueDate,omitempty"`
	IssuePlace           string               `protobuf:"bytes,8,opt,name=IssuePlace,json=issue_place,proto3" json:"IssuePlace,omitempty"`
	ExpiryDate           *timestamp.Timestamp `protobuf:"bytes,9,opt,name=ExpiryDate,json=expiry_date,proto3" json:"ExpiryDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{9}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *Document) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *Document) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Document) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *Document) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Document) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Document) GetIssueDate() *timestamp.Timestamp {
	if m != nil {
		return m.IssueDate
	}
	return nil
}

func (m *Document) GetIssuePlace() string {
	if m != nil {
		return m.IssuePlace
	}
	return ""
}

func (m *Document) GetExpiryDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryDate
	}
	return nil
}

type Status struct {
	CustomerID           string               `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,2,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Ok                   bool                 `protobuf:"varint,3,opt,name=Ok,json=ok,proto3" json:"Ok,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{10}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *Status) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *Status) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *Status) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type Media struct {
	BankID                 string               `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CustomerID             string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	ID                     string               `protobuf:"bytes,3,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	CustomerNumber         string               `protobuf:"bytes,4,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Type                   string               `protobuf:"bytes,5,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	URL                    string               `protobuf:"bytes,6,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	Date                   *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	RelatesToKycDocumentID string               `protobuf:"bytes,8,opt,name=RelatesToKycDocumentID,json=relates_to_kyc_document_id,proto3" json:"RelatesToKycDocumentID,omitempty"`
	RelatesToKycCheckID    string               `protobuf:"bytes,9,opt,name=RelatesToKycCheckID,json=relates_to_kyc_check_id,proto3" json:"RelatesToKycCheckID,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}
func (*Media) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{11}
}

func (m *Media) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media.Unmarshal(m, b)
}
func (m *Media) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media.Marshal(b, m, deterministic)
}
func (m *Media) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media.Merge(m, src)
}
func (m *Media) XXX_Size() int {
	return xxx_messageInfo_Media.Size(m)
}
func (m *Media) XXX_DiscardUnknown() {
	xxx_messageInfo_Media.DiscardUnknown(m)
}

var xxx_messageInfo_Media proto.InternalMessageInfo

func (m *Media) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *Media) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *Media) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Media) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *Media) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Media) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *Media) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Media) GetRelatesToKycDocumentID() string {
	if m != nil {
		return m.RelatesToKycDocumentID
	}
	return ""
}

func (m *Media) GetRelatesToKycCheckID() string {
	if m != nil {
		return m.RelatesToKycCheckID
	}
	return ""
}

type GetCustomerKYCCheckRequest struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerKYCCheckRequest) Reset()         { *m = GetCustomerKYCCheckRequest{} }
func (m *GetCustomerKYCCheckRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerKYCCheckRequest) ProtoMessage()    {}
func (*GetCustomerKYCCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{12}
}

func (m *GetCustomerKYCCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerKYCCheckRequest.Unmarshal(m, b)
}
func (m *GetCustomerKYCCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerKYCCheckRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerKYCCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerKYCCheckRequest.Merge(m, src)
}
func (m *GetCustomerKYCCheckRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerKYCCheckRequest.Size(m)
}
func (m *GetCustomerKYCCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerKYCCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerKYCCheckRequest proto.InternalMessageInfo

func (m *GetCustomerKYCCheckRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

type GetCustomerKYCCheckResponse struct {
	Checks               []*Check `protobuf:"bytes,1,rep,name=Checks,json=checks,proto3" json:"Checks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerKYCCheckResponse) Reset()         { *m = GetCustomerKYCCheckResponse{} }
func (m *GetCustomerKYCCheckResponse) String() string { return proto.CompactTextString(m) }
func (*GetCustomerKYCCheckResponse) ProtoMessage()    {}
func (*GetCustomerKYCCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{13}
}

func (m *GetCustomerKYCCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerKYCCheckResponse.Unmarshal(m, b)
}
func (m *GetCustomerKYCCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerKYCCheckResponse.Marshal(b, m, deterministic)
}
func (m *GetCustomerKYCCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerKYCCheckResponse.Merge(m, src)
}
func (m *GetCustomerKYCCheckResponse) XXX_Size() int {
	return xxx_messageInfo_GetCustomerKYCCheckResponse.Size(m)
}
func (m *GetCustomerKYCCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerKYCCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerKYCCheckResponse proto.InternalMessageInfo

func (m *GetCustomerKYCCheckResponse) GetChecks() []*Check {
	if m != nil {
		return m.Checks
	}
	return nil
}

type GetCustomerKYCDocumentRequest struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerKYCDocumentRequest) Reset()         { *m = GetCustomerKYCDocumentRequest{} }
func (m *GetCustomerKYCDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerKYCDocumentRequest) ProtoMessage()    {}
func (*GetCustomerKYCDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{14}
}

func (m *GetCustomerKYCDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerKYCDocumentRequest.Unmarshal(m, b)
}
func (m *GetCustomerKYCDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerKYCDocumentRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerKYCDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerKYCDocumentRequest.Merge(m, src)
}
func (m *GetCustomerKYCDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerKYCDocumentRequest.Size(m)
}
func (m *GetCustomerKYCDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerKYCDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerKYCDocumentRequest proto.InternalMessageInfo

func (m *GetCustomerKYCDocumentRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

type GetCustomerKYCDocumentResponse struct {
	Documents            []*Document `protobuf:"bytes,1,rep,name=Documents,json=documents,proto3" json:"Documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetCustomerKYCDocumentResponse) Reset()         { *m = GetCustomerKYCDocumentResponse{} }
func (m *GetCustomerKYCDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*GetCustomerKYCDocumentResponse) ProtoMessage()    {}
func (*GetCustomerKYCDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{15}
}

func (m *GetCustomerKYCDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerKYCDocumentResponse.Unmarshal(m, b)
}
func (m *GetCustomerKYCDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerKYCDocumentResponse.Marshal(b, m, deterministic)
}
func (m *GetCustomerKYCDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerKYCDocumentResponse.Merge(m, src)
}
func (m *GetCustomerKYCDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_GetCustomerKYCDocumentResponse.Size(m)
}
func (m *GetCustomerKYCDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerKYCDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerKYCDocumentResponse proto.InternalMessageInfo

func (m *GetCustomerKYCDocumentResponse) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

type GetCustomerKYCStatusRequest struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerKYCStatusRequest) Reset()         { *m = GetCustomerKYCStatusRequest{} }
func (m *GetCustomerKYCStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerKYCStatusRequest) ProtoMessage()    {}
func (*GetCustomerKYCStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{16}
}

func (m *GetCustomerKYCStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerKYCStatusRequest.Unmarshal(m, b)
}
func (m *GetCustomerKYCStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerKYCStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerKYCStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerKYCStatusRequest.Merge(m, src)
}
func (m *GetCustomerKYCStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerKYCStatusRequest.Size(m)
}
func (m *GetCustomerKYCStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerKYCStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerKYCStatusRequest proto.InternalMessageInfo

func (m *GetCustomerKYCStatusRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

type GetCustomerKYCStatusResponse struct {
	Statuses             []*Status `protobuf:"bytes,1,rep,name=Statuses,json=statuses,proto3" json:"Statuses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetCustomerKYCStatusResponse) Reset()         { *m = GetCustomerKYCStatusResponse{} }
func (m *GetCustomerKYCStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetCustomerKYCStatusResponse) ProtoMessage()    {}
func (*GetCustomerKYCStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{17}
}

func (m *GetCustomerKYCStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerKYCStatusResponse.Unmarshal(m, b)
}
func (m *GetCustomerKYCStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerKYCStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetCustomerKYCStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerKYCStatusResponse.Merge(m, src)
}
func (m *GetCustomerKYCStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetCustomerKYCStatusResponse.Size(m)
}
func (m *GetCustomerKYCStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerKYCStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerKYCStatusResponse proto.InternalMessageInfo

func (m *GetCustomerKYCStatusResponse) GetStatuses() []*Status {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type GetKYCMediaRequest struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKYCMediaRequest) Reset()         { *m = GetKYCMediaRequest{} }
func (m *GetKYCMediaRequest) String() string { return proto.CompactTextString(m) }
func (*GetKYCMediaRequest) ProtoMessage()    {}
func (*GetKYCMediaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{18}
}

func (m *GetKYCMediaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKYCMediaRequest.Unmarshal(m, b)
}
func (m *GetKYCMediaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKYCMediaRequest.Marshal(b, m, deterministic)
}
func (m *GetKYCMediaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKYCMediaRequest.Merge(m, src)
}
func (m *GetKYCMediaRequest) XXX_Size() int {
	return xxx_messageInfo_GetKYCMediaRequest.Size(m)
}
func (m *GetKYCMediaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKYCMediaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetKYCMediaRequest proto.InternalMessageInfo

func (m *GetKYCMediaRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

type GetKYCMediaResponse struct {
	Medias               []*Media `protobuf:"bytes,1,rep,name=Medias,json=medias,proto3" json:"Medias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKYCMediaResponse) Reset()         { *m = GetKYCMediaResponse{} }
func (m *GetKYCMediaResponse) String() string { return proto.CompactTextString(m) }
func (*GetKYCMediaResponse) ProtoMessage()    {}
func (*GetKYCMediaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_513aaa1cb88678c5, []int{19}
}

func (m *GetKYCMediaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKYCMediaResponse.Unmarshal(m, b)
}
func (m *GetKYCMediaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKYCMediaResponse.Marshal(b, m, deterministic)
}
func (m *GetKYCMediaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKYCMediaResponse.Merge(m, src)
}
func (m *GetKYCMediaResponse) XXX_Size() int {
	return xxx_messageInfo_GetKYCMediaResponse.Size(m)
}
func (m *GetKYCMediaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKYCMediaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetKYCMediaResponse proto.InternalMessageInfo

func (m *GetKYCMediaResponse) GetMedias() []*Media {
	if m != nil {
		return m.Medias
	}
	return nil
}

func init() {
	proto.RegisterType((*AddKYCCheckRequest)(nil), "kyc.AddKYCCheckRequest")
	proto.RegisterType((*AddKYCCheckResponse)(nil), "kyc.AddKYCCheckResponse")
	proto.RegisterType((*AddKYCDocumentRequest)(nil), "kyc.AddKYCDocumentRequest")
	proto.RegisterType((*AddKYCDocumentResponse)(nil), "kyc.AddKYCDocumentResponse")
	proto.RegisterType((*AddKYCMediaRequest)(nil), "kyc.AddKYCMediaRequest")
	proto.RegisterType((*AddKYCMediaResponse)(nil), "kyc.AddKYCMediaResponse")
	proto.RegisterType((*AddKYCStatusRequest)(nil), "kyc.AddKYCStatusRequest")
	proto.RegisterType((*AddKYCStatusResponse)(nil), "kyc.AddKYCStatusResponse")
	proto.RegisterType((*Check)(nil), "kyc.Check")
	proto.RegisterType((*Document)(nil), "kyc.Document")
	proto.RegisterType((*Status)(nil), "kyc.Status")
	proto.RegisterType((*Media)(nil), "kyc.Media")
	proto.RegisterType((*GetCustomerKYCCheckRequest)(nil), "kyc.GetCustomerKYCCheckRequest")
	proto.RegisterType((*GetCustomerKYCCheckResponse)(nil), "kyc.GetCustomerKYCCheckResponse")
	proto.RegisterType((*GetCustomerKYCDocumentRequest)(nil), "kyc.GetCustomerKYCDocumentRequest")
	proto.RegisterType((*GetCustomerKYCDocumentResponse)(nil), "kyc.GetCustomerKYCDocumentResponse")
	proto.RegisterType((*GetCustomerKYCStatusRequest)(nil), "kyc.GetCustomerKYCStatusRequest")
	proto.RegisterType((*GetCustomerKYCStatusResponse)(nil), "kyc.GetCustomerKYCStatusResponse")
	proto.RegisterType((*GetKYCMediaRequest)(nil), "kyc.GetKYCMediaRequest")
	proto.RegisterType((*GetKYCMediaResponse)(nil), "kyc.GetKYCMediaResponse")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/kyc/all.proto", fileDescriptor_513aaa1cb88678c5)
}

var fileDescriptor_513aaa1cb88678c5 = []byte{
	// 2022 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x99, 0xdf, 0x6f, 0x1c, 0x57,
	0x15, 0xc7, 0xe7, 0x87, 0xbd, 0xde, 0x3d, 0x6e, 0xd2, 0x70, 0x1d, 0xd2, 0xed, 0x34, 0x4d, 0x07,
	0xa7, 0x8d, 0xd7, 0x76, 0x32, 0xfb, 0xc3, 0xe1, 0x97, 0x25, 0x04, 0x1b, 0x3b, 0x75, 0x1d, 0xa7,
	0x8d, 0xbb, 0x76, 0x2a, 0x12, 0x90, 0xac, 0xf1, 0xcc, 0x5d, 0xef, 0xb0, 0xbb, 0x73, 0x97, 0xb9,
	0x77, 0xec, 0x2c, 0x55, 0x24, 0xc4, 0x53, 0x1e, 0x2b, 0xf3, 0x37, 0x20, 0x01, 0x12, 0xe2, 0x97,
	0x5a, 0x40, 0xe2, 0x81, 0x07, 0x24, 0xa4, 0xf2, 0x82, 0x04, 0x52, 0xcb, 0x13, 0x52, 0x81, 0x27,
	0x10, 0x6f, 0x48, 0x08, 0x5e, 0xd0, 0xdc, 0x99, 0xd9, 0x9d, 0xd9, 0x99, 0xf5, 0x7a, 0xdd, 0x80,
	0xea, 0x2a, 0x4f, 0xf1, 0xde, 0x7b, 0xe6, 0xdc, 0x73, 0x3f, 0xdf, 0x73, 0xee, 0xb9, 0x33, 0x81,
	0x6b, 0x7b, 0x16, 0x6b, 0xb8, 0xbb, 0x9a, 0x41, 0xda, 0x45, 0xd2, 0xc1, 0xf6, 0xae, 0x6e, 0x37,
	0xfb, 0x7f, 0xec, 0x97, 0x8b, 0xcd, 0xae, 0x51, 0xd4, 0x5b, 0x2d, 0xad, 0xe3, 0x10, 0x46, 0x90,
	0xdc, 0xec, 0x1a, 0xca, 0x0b, 0x7b, 0x84, 0xec, 0xb5, 0x70, 0x91, 0x0f, 0xed, 0xba, 0xf5, 0x22,
	0xb3, 0xda, 0x98, 0x32, 0xbd, 0xdd, 0xf1, 0xad, 0x94, 0x8b, 0x81, 0x81, 0xde, 0xb1, 0x8a, 0xba,
	0x6d, 0x13, 0xa6, 0x33, 0x8b, 0xd8, 0x34, 0x98, 0xbd, 0xca, 0xff, 0x31, 0xae, 0xed, 0x61, 0xfb,
	0x1a, 0x3d, 0xd0, 0xf7, 0xf6, 0xb0, 0x53, 0x24, 0x1d, 0x6e, 0x91, 0xb4, 0x9e, 0xfd, 0xa9, 0x0c,
	0xa8, 0x6a, 0x9a, 0x1b, 0xf7, 0x56, 0x56, 0x1a, 0xd8, 0x68, 0xd6, 0xf0, 0xd7, 0x5d, 0x4c, 0x19,
	0xba, 0x0a, 0x10, 0x0e, 0xad, 0xaf, 0xe6, 0x45, 0x55, 0x2c, 0xe4, 0x6e, 0x40, 0x56, 0xc8, 0x0b,
	0x05, 0xa1, 0x24, 0x6c, 0x0a, 0xb5, 0xa7, 0x9a, 0x5d, 0x63, 0xc7, 0xf0, 0xa6, 0x77, 0x2c, 0x13,
	0x2d, 0x02, 0xac, 0xb8, 0x94, 0x91, 0x36, 0x76, 0xd6, 0x57, 0xf3, 0x52, 0xc2, 0x7a, 0xda, 0x08,
	0x66, 0x3d, 0xe3, 0x25, 0x38, 0x1b, 0x1a, 0xbf, 0xe6, 0xb6, 0x77, 0xb1, 0x93, 0x97, 0x13, 0x0f,
	0x3c, 0xdd, 0x7b, 0xc0, 0xe6, 0x26, 0x68, 0x19, 0x26, 0x56, 0x75, 0x86, 0xf3, 0x13, 0xaa, 0x58,
	0x98, 0xae, 0x28, 0x9a, 0x4f, 0x40, 0x0b, 0x11, 0x69, 0xdb, 0x21, 0xa2, 0x98, 0x9b, 0x09, 0x53,
	0x67, 0x18, 0x5d, 0x04, 0xf9, 0x15, 0x72, 0x90, 0x9f, 0x4c, 0xac, 0x22, 0x37, 0xc8, 0x01, 0xd2,
	0x60, 0x7a, 0x8b, 0xe9, 0xf5, 0xfa, 0x5d, 0xca, 0x83, 0xcf, 0x24, 0xac, 0xce, 0x50, 0x6f, 0x7a,
	0xc7, 0xa5, 0x7e, 0xf8, 0xf3, 0x90, 0xe3, 0xf6, 0xaf, 0xe9, 0x6d, 0x9c, 0x9f, 0x4a, 0x58, 0x83,
	0x6f, 0x6d, 0xeb, 0x6d, 0x8c, 0x0a, 0x90, 0xdb, 0xd2, 0x99, 0x45, 0xeb, 0x16, 0x36, 0xf3, 0x59,
	0x55, 0x2c, 0x64, 0x63, 0xa6, 0x39, 0x1a, 0x4e, 0xa2, 0x2b, 0x90, 0x5d, 0x21, 0xed, 0x36, 0xb6,
	0x19, 0xcd, 0xe7, 0x12, 0x3e, 0xb3, 0x46, 0x30, 0xb7, 0x9c, 0xc9, 0x0a, 0xe7, 0x84, 0xbc, 0x30,
	0xfb, 0x1b, 0x19, 0x66, 0x62, 0xaa, 0xd1, 0x0e, 0xb1, 0x29, 0x46, 0x97, 0x21, 0x73, 0x43, 0xb7,
	0xd3, 0x25, 0x9b, 0xf2, 0x52, 0x6e, 0x6c, 0xb5, 0x14, 0x90, 0xd6, 0x57, 0x53, 0x14, 0x92, 0x52,
	0x95, 0x9c, 0x38, 0xbe, 0x92, 0x93, 0x27, 0x57, 0x32, 0x73, 0x2c, 0x25, 0xa7, 0xc6, 0x52, 0x32,
	0x7b, 0x7c, 0x25, 0x73, 0xc7, 0x55, 0x12, 0x8e, 0xa1, 0xe4, 0x3b, 0x32, 0x7c, 0xd2, 0x57, 0x72,
	0x95, 0x18, 0xae, 0x37, 0x17, 0x96, 0x60, 0x05, 0xce, 0x44, 0x46, 0x53, 0x25, 0x7d, 0xda, 0xab,
	0x42, 0x33, 0xb0, 0xf8, 0xff, 0x14, 0xe2, 0x25, 0x98, 0xd8, 0xee, 0x76, 0x70, 0x8a, 0xd2, 0x13,
	0xac, 0xdb, 0xc1, 0x68, 0x16, 0x32, 0x81, 0xb3, 0x64, 0xbd, 0x65, 0x02, 0x1f, 0x37, 0x21, 0xb7,
	0x4e, 0xa9, 0x8b, 0x79, 0x1e, 0x64, 0xc6, 0xca, 0x03, 0xb0, 0xbc, 0x07, 0x77, 0x78, 0x36, 0x2c,
	0x02, 0x70, 0x37, 0x9b, 0x2d, 0xdd, 0x48, 0x2b, 0xc5, 0x69, 0xdf, 0xb6, 0xe3, 0x4d, 0xa3, 0x35,
	0x80, 0x9b, 0x0f, 0x3a, 0x96, 0xd3, 0xe5, 0x8b, 0x66, 0xc7, 0x5a, 0x74, 0x1a, 0xf3, 0x27, 0xf9,
	0xaa, 0x3d, 0xe1, 0x7e, 0x2d, 0xc3, 0x85, 0x41, 0xe1, 0x4e, 0x4f, 0x15, 0x86, 0x32, 0x4e, 0x8e,
	0x94, 0x31, 0x73, 0x3c, 0x19, 0xa7, 0x1e, 0x93, 0x8c, 0xd9, 0x71, 0x64, 0xcc, 0x7d, 0x78, 0x19,
	0x7f, 0xd4, 0xeb, 0x7f, 0xaf, 0x62, 0xd3, 0xd2, 0xe3, 0xfd, 0x8f, 0x0f, 0x0d, 0xef, 0x7f, 0x6d,
	0x6f, 0xfa, 0xa3, 0x51, 0x76, 0x17, 0x41, 0xbe, 0x5b, 0xbb, 0x9d, 0xd6, 0xe3, 0x5c, 0xa7, 0xd5,
	0x3b, 0x73, 0x33, 0x27, 0x38, 0x73, 0x5f, 0x86, 0x0b, 0x35, 0xdc, 0xd2, 0x19, 0xa6, 0xdb, 0x64,
	0xa3, 0x6b, 0x44, 0xce, 0xa3, 0x64, 0xc5, 0x29, 0x8e, 0x6f, 0xb9, 0xc3, 0xc8, 0xce, 0xe0, 0xd1,
	0xf4, 0x25, 0x98, 0x89, 0xfa, 0x09, 0xaf, 0x16, 0x49, 0xbd, 0x9f, 0x19, 0x70, 0x12, 0xde, 0x32,
	0xa2, 0x95, 0x37, 0x13, 0x93, 0xec, 0xe3, 0x53, 0x76, 0x81, 0x8c, 0x99, 0xa3, 0x65, 0x9c, 0x7a,
	0xac, 0x32, 0x66, 0x1f, 0x87, 0x8c, 0xb9, 0xf1, 0x65, 0x7c, 0x4f, 0x0c, 0x65, 0xdc, 0x62, 0x3a,
	0x73, 0x69, 0x58, 0x7a, 0x71, 0x85, 0xc4, 0x71, 0x8b, 0x49, 0x1a, 0xad, 0x82, 0x02, 0xd2, 0x9d,
	0x26, 0x97, 0x35, 0xde, 0xc6, 0x25, 0xd2, 0xfc, 0x30, 0x17, 0xcd, 0xde, 0xce, 0xde, 0x17, 0xe1,
	0x7c, 0x7c, 0x67, 0x41, 0x86, 0x9e, 0xfe, 0xad, 0xfd, 0x42, 0x86, 0x49, 0xae, 0xf9, 0x93, 0xab,
	0xe6, 0x69, 0xbc, 0x6a, 0x66, 0xc3, 0xba, 0x7f, 0x72, 0x47, 0x39, 0x45, 0x77, 0x94, 0x77, 0x45,
	0xc8, 0xf8, 0x27, 0xc9, 0xc7, 0xe0, 0x04, 0x79, 0x47, 0x86, 0x49, 0xde, 0xb7, 0x9f, 0xf4, 0xeb,
	0xd3, 0xd5, 0xaf, 0x5f, 0x07, 0x65, 0x0d, 0xb3, 0x90, 0xe1, 0xe0, 0x07, 0xa3, 0x71, 0x12, 0xb3,
	0xe7, 0xf2, 0x2e, 0x3c, 0x97, 0xea, 0x32, 0x68, 0x97, 0x1a, 0x64, 0xf8, 0x00, 0xcd, 0x8b, 0xaa,
	0x5c, 0x98, 0xae, 0x80, 0xd6, 0xec, 0x1a, 0x1a, 0x1f, 0x8a, 0x17, 0x3b, 0x8f, 0xb5, 0x7f, 0xd0,
	0x6d, 0xc3, 0xf3, 0x71, 0xb7, 0x83, 0xaf, 0xd6, 0x27, 0x0a, 0x56, 0x87, 0x4b, 0xc3, 0xbc, 0x06,
	0xf1, 0x7e, 0x16, 0x72, 0xe1, 0x58, 0x18, 0xf2, 0x19, 0x1e, 0x72, 0x38, 0x1a, 0x3f, 0xc9, 0x43,
	0x99, 0xfa, 0x81, 0xd7, 0x06, 0x79, 0x9c, 0xfc, 0x66, 0xd4, 0xf3, 0xf9, 0x15, 0xb8, 0x98, 0xee,
	0x33, 0x08, 0x7a, 0x09, 0xb2, 0xfe, 0x08, 0x0e, 0x63, 0x9e, 0xe6, 0x31, 0xfb, 0x83, 0xf1, 0x96,
	0x42, 0x03, 0xc3, 0x9e, 0xf3, 0x75, 0x40, 0x6b, 0x98, 0x0d, 0xbe, 0x3c, 0x9d, 0x28, 0xce, 0x57,
	0x61, 0x26, 0xe6, 0xaa, 0x9f, 0x03, 0x7c, 0x20, 0x9e, 0x03, 0x7c, 0x28, 0x9e, 0x03, 0xfc, 0x65,
	0xac, 0x17, 0x59, 0xe5, 0x67, 0xe7, 0xf9, 0x1b, 0xdc, 0x16, 0x76, 0xf6, 0x2d, 0x03, 0xa3, 0x9f,
	0x48, 0x30, 0x1d, 0xf9, 0x60, 0x86, 0x9e, 0xe1, 0x6e, 0x92, 0x1f, 0x3e, 0x95, 0x7c, 0x72, 0xc2,
	0x8f, 0x64, 0xf6, 0x6f, 0xe2, 0x61, 0xf5, 0x3b, 0x22, 0xc8, 0x1b, 0xf7, 0x56, 0xd0, 0x99, 0xaa,
	0x69, 0xaa, 0x1b, 0xf7, 0x56, 0x54, 0x9e, 0x79, 0x4a, 0x21, 0xf6, 0x53, 0xad, 0x13, 0x47, 0x65,
	0x0d, 0xac, 0x86, 0xdb, 0x54, 0x69, 0x07, 0x1b, 0x96, 0xd7, 0xb3, 0x6f, 0x6d, 0x82, 0x5c, 0x29,
	0x95, 0xd1, 0x3a, 0x3c, 0xdf, 0x37, 0xd7, 0x4d, 0x13, 0x9b, 0x2a, 0x75, 0x0d, 0x03, 0x53, 0x5a,
	0x77, 0x5b, 0xad, 0xae, 0x86, 0x0a, 0x70, 0x45, 0x79, 0xf1, 0x72, 0xd1, 0xc4, 0x75, 0xcb, 0xb6,
	0xfc, 0x6f, 0xb7, 0xcd, 0xae, 0x91, 0x12, 0xd6, 0xee, 0x0c, 0x7c, 0x02, 0x32, 0x77, 0xaa, 0x2e,
	0x6b, 0x54, 0xd0, 0x14, 0x4c, 0x1e, 0x38, 0x16, 0xc3, 0xdf, 0xfa, 0xfd, 0x5f, 0xbe, 0x2d, 0x7d,
	0x66, 0x59, 0x5c, 0x50, 0xca, 0xc5, 0xfd, 0x72, 0x31, 0x8c, 0x83, 0x16, 0xdf, 0xec, 0xeb, 0xf2,
	0xb0, 0xd8, 0xab, 0xf2, 0xe2, 0x9b, 0xfd, 0x6f, 0xbd, 0x0f, 0x1f, 0x49, 0xc2, 0x5b, 0x12, 0xa7,
	0x8a, 0xde, 0x95, 0xe0, 0x6c, 0xfc, 0x13, 0x07, 0x52, 0x22, 0x78, 0x06, 0xaa, 0x4a, 0x79, 0x2e,
	0x75, 0x2e, 0xa0, 0xf7, 0x6f, 0xf1, 0xb0, 0xfa, 0xe3, 0x80, 0xde, 0xb9, 0x10, 0x57, 0x58, 0x01,
	0xca, 0xe2, 0xe0, 0xc8, 0x51, 0x0c, 0xdf, 0xf0, 0x19, 0xde, 0x01, 0xfe, 0x44, 0xb8, 0x52, 0x2a,
	0xc6, 0x45, 0x98, 0x57, 0xe6, 0x86, 0x60, 0x1c, 0x0c, 0x71, 0x38, 0xc9, 0xcf, 0x7b, 0x24, 0xaf,
	0x1f, 0x9b, 0x64, 0xff, 0xac, 0x8e, 0xc2, 0x7c, 0xbb, 0x97, 0x81, 0x7e, 0xf7, 0x8b, 0x66, 0x60,
	0xb4, 0x7a, 0x62, 0x19, 0x18, 0xab, 0x85, 0xd9, 0x7f, 0x88, 0x87, 0xd5, 0xef, 0x0e, 0x66, 0x20,
	0xcf, 0xfb, 0x7e, 0x06, 0xf2, 0x9f, 0x47, 0xd1, 0xdb, 0xf2, 0xe9, 0xdd, 0xf6, 0x33, 0x90, 0x2f,
	0xf0, 0x3f, 0x44, 0x37, 0x66, 0x12, 0x06, 0x1f, 0x5c, 0xa2, 0xdc, 0x7e, 0x28, 0xc1, 0x53, 0xd1,
	0x97, 0x29, 0x14, 0xe5, 0x13, 0x3b, 0x1f, 0x95, 0x67, 0x53, 0x66, 0x02, 0x74, 0x7f, 0x15, 0x0f,
	0xab, 0xdf, 0x0b, 0xd0, 0x9d, 0x0d, 0x59, 0xf9, 0xc7, 0x99, 0x32, 0x1f, 0xff, 0x7d, 0x14, 0xbc,
	0x9a, 0x0f, 0x6f, 0x03, 0x2e, 0x45, 0xec, 0xd3, 0xe8, 0xcd, 0xc3, 0x9c, 0xf2, 0xd2, 0x10, 0x7a,
	0xf1, 0xd0, 0x86, 0xb3, 0xbb, 0xea, 0xb1, 0x9b, 0x1b, 0xc1, 0x2e, 0x3c, 0x92, 0x23, 0xc4, 0x7e,
	0x2b, 0xf1, 0xa3, 0x74, 0xb0, 0xad, 0xa2, 0x17, 0x38, 0x9e, 0xe1, 0x3d, 0x5c, 0x51, 0x87, 0x1b,
	0x04, 0x18, 0xff, 0x2e, 0x1e, 0x56, 0xdf, 0x0e, 0x30, 0x5e, 0x58, 0xc3, 0x4c, 0x0d, 0x2d, 0x23,
	0x87, 0xe1, 0x5c, 0xfa, 0xb8, 0x5a, 0x27, 0x2c, 0x86, 0xf5, 0xd6, 0x3d, 0x1f, 0x66, 0x0d, 0x2e,
	0x05, 0x01, 0xa8, 0xf8, 0x01, 0x36, 0x5c, 0x96, 0x80, 0x59, 0x02, 0x4d, 0xb9, 0x9a, 0x80, 0x79,
	0x44, 0x9c, 0xbb, 0x08, 0xce, 0xf5, 0x98, 0x66, 0x60, 0xc2, 0xc1, 0xba, 0xc9, 0x91, 0xce, 0xa1,
	0x97, 0x8e, 0x93, 0x8b, 0x51, 0x9a, 0x1f, 0x48, 0x70, 0x21, 0xbd, 0xef, 0xa3, 0xd9, 0x14, 0x5e,
	0x83, 0x87, 0xe2, 0xe5, 0x23, 0x6d, 0x22, 0x87, 0xe3, 0xaf, 0x02, 0xac, 0x4a, 0x02, 0x5f, 0xef,
	0x9e, 0xa0, 0x2c, 0x0e, 0x9f, 0x4b, 0xe2, 0xfd, 0xaa, 0x8f, 0xf7, 0xee, 0x48, 0xbc, 0x4b, 0x50,
	0x56, 0x8a, 0x23, 0xf0, 0x26, 0x2a, 0x7e, 0x18, 0xe1, 0x05, 0x54, 0x18, 0x41, 0xb8, 0x17, 0x72,
	0x04, 0xf2, 0x7b, 0x12, 0x9c, 0x4f, 0xbb, 0xa5, 0xa0, 0xb4, 0x94, 0x8c, 0x17, 0xfd, 0xa7, 0x8e,
	0xb0, 0x08, 0xf0, 0xfe, 0x53, 0x3c, 0xac, 0xfe, 0x32, 0xc0, 0xfb, 0x6c, 0x02, 0x61, 0x58, 0x41,
	0xca, 0xc2, 0xd0, 0xa9, 0x24, 0xdc, 0xfb, 0x3e, 0xdc, 0xad, 0x91, 0x70, 0xcb, 0x50, 0x54, 0xae,
	0x8d, 0x80, 0x3b, 0x70, 0x20, 0x0c, 0x43, 0x3b, 0x8f, 0x4e, 0x70, 0x18, 0x7c, 0x5f, 0x82, 0xe9,
	0xc8, 0xbd, 0x2a, 0x68, 0x3b, 0xc9, 0x4b, 0x5b, 0xd0, 0x76, 0x52, 0xae, 0x60, 0xb3, 0x7f, 0x16,
	0x0f, 0xab, 0x3f, 0x18, 0x5a, 0xf4, 0x7e, 0xff, 0x99, 0x4b, 0x1f, 0x4f, 0x82, 0x7b, 0xdd, 0x07,
	0x77, 0x6b, 0x24, 0xb8, 0xf4, 0x1b, 0x50, 0x4a, 0x7c, 0x43, 0x79, 0x5d, 0x41, 0x2f, 0x8e, 0xe0,
	0xc5, 0x63, 0xec, 0xc3, 0x52, 0xe4, 0x47, 0x92, 0x70, 0xe3, 0x3f, 0x93, 0x87, 0xd5, 0x3f, 0x4e,
	0x82, 0x5c, 0xd1, 0x4a, 0xe8, 0x16, 0x4c, 0x79, 0x7b, 0xa9, 0x6e, 0xae, 0xa3, 0xcf, 0x6d, 0x3a,
	0x64, 0xdf, 0x32, 0x31, 0x55, 0x0d, 0x07, 0xeb, 0x0c, 0xab, 0xba, 0x6d, 0xaa, 0xde, 0x5a, 0x2a,
	0xe9, 0x60, 0xc7, 0xff, 0x3f, 0x75, 0x95, 0xd8, 0x7c, 0xb7, 0xde, 0x33, 0x0e, 0xa6, 0xc4, 0x75,
	0x0c, 0xac, 0x55, 0x26, 0xcb, 0x5a, 0x49, 0x2b, 0x2d, 0x88, 0x52, 0xe5, 0x9c, 0xde, 0xe9, 0xb4,
	0x2c, 0x83, 0x1b, 0x17, 0xbf, 0x46, 0x89, 0xbd, 0x9c, 0x18, 0xa9, 0xdd, 0x06, 0xf9, 0x7a, 0xa9,
	0x8c, 0x6e, 0xc2, 0x4a, 0x0d, 0x33, 0xd7, 0xb1, 0xb1, 0xa9, 0x1e, 0x34, 0xb0, 0xef, 0xd7, 0x09,
	0x90, 0x99, 0x04, 0x53, 0xd5, 0x26, 0x4c, 0x35, 0x88, 0xcd, 0x74, 0xcb, 0xa6, 0x7c, 0xd6, 0xa5,
	0xd8, 0x99, 0xe3, 0xe1, 0x99, 0xd8, 0x66, 0x96, 0xde, 0xa2, 0x5a, 0x6d, 0xd3, 0xf3, 0xb6, 0x84,
	0xd6, 0x61, 0x2d, 0xe9, 0xcd, 0xb3, 0xef, 0xbb, 0x6a, 0xe8, 0xfb, 0x58, 0xed, 0x60, 0xa7, 0x6d,
	0x51, 0x6a, 0x79, 0xfb, 0x20, 0xaa, 0xce, 0xf5, 0x08, 0x56, 0x0e, 0x76, 0x53, 0x2b, 0x7b, 0x1e,
	0xaf, 0xa3, 0x05, 0x28, 0xa4, 0xc5, 0xe7, 0x5b, 0xa9, 0x96, 0xef, 0xb3, 0x4e, 0x5c, 0xdb, 0xd4,
	0x6a, 0x2f, 0x83, 0xfc, 0xe9, 0x52, 0x09, 0x7d, 0x11, 0xbe, 0x10, 0x7f, 0x44, 0xb7, 0x55, 0xd7,
	0xc6, 0x0f, 0x3a, 0xd8, 0xf0, 0xe4, 0xc7, 0x8e, 0x43, 0x1c, 0x95, 0x18, 0x86, 0xeb, 0x60, 0x33,
	0x24, 0x49, 0xb1, 0xb3, 0xef, 0x75, 0x60, 0xcb, 0xc4, 0x5a, 0x6d, 0xc7, 0x5b, 0xba, 0x84, 0xbe,
	0x0c, 0x6f, 0x0c, 0x47, 0xb3, 0x4b, 0xcc, 0xae, 0xb7, 0x7c, 0x5b, 0x6f, 0xd5, 0x89, 0xd3, 0xd6,
	0x99, 0xe7, 0x9a, 0x44, 0xf6, 0xd9, 0xd6, 0x99, 0xd1, 0xe0, 0x8f, 0xf4, 0x56, 0x0e, 0x9e, 0xd5,
	0xee, 0x7f, 0x20, 0xc2, 0x9f, 0xc4, 0x5e, 0x2e, 0xfd, 0x41, 0xcc, 0xca, 0xe8, 0x61, 0x35, 0x80,
	0x40, 0xd4, 0x66, 0xd7, 0xe8, 0xed, 0x90, 0x7a, 0x6b, 0x38, 0x98, 0x32, 0xc7, 0xe2, 0x2e, 0x3c,
	0x5a, 0x2e, 0x6b, 0x78, 0xdc, 0x0d, 0xdd, 0x1b, 0xf0, 0xe0, 0x52, 0x4d, 0xdd, 0x6e, 0xe0, 0xe8,
	0x84, 0x07, 0xb6, 0xe3, 0x10, 0xee, 0xb1, 0x4e, 0x5a, 0x2d, 0x72, 0xe0, 0xe3, 0xf5, 0x16, 0x24,
	0x8e, 0xf5, 0x0d, 0xdf, 0x62, 0x85, 0x98, 0x58, 0xad, 0xb7, 0xc8, 0x81, 0x56, 0x98, 0xa8, 0x64,
	0xbd, 0x1c, 0xf6, 0x5c, 0x2c, 0xe7, 0xbc, 0xbf, 0x18, 0x69, 0x62, 0xfb, 0xc6, 0x32, 0x28, 0x7e,
	0xa2, 0x23, 0xb4, 0xe6, 0xe8, 0xde, 0xf1, 0xcf, 0x33, 0xd1, 0x17, 0x0c, 0x2e, 0x06, 0xb7, 0x08,
	0x34, 0x13, 0x4c, 0xf2, 0x5f, 0xc1, 0xec, 0x2b, 0xe2, 0xa6, 0x70, 0x5f, 0x6e, 0x76, 0x8d, 0x6f,
	0x8a, 0xc2, 0x23, 0x51, 0x78, 0x4b, 0x14, 0x7e, 0x2e, 0x0a, 0xef, 0x8b, 0xc2, 0xbf, 0x44, 0xe1,
	0x77, 0x92, 0xb0, 0x9b, 0xe1, 0x5f, 0x27, 0x96, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xac,
	0x12, 0xd4, 0xb9, 0x22, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KYCServiceClient is the client API for KYCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KYCServiceClient interface {
	// AddKYCCheck Add a KYC check for the customer specified by CUSTOMER_ID.
	//KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status.
	AddKYCCheck(ctx context.Context, in *AddKYCCheckRequest, opts ...grpc.CallOption) (*AddKYCCheckResponse, error)
	// AddKYCDocument Add a KYC document for the customer specified by CUSTOMER_ID.
	//KYC Documents contain the document type (e.g. passport), place of issue, expiry etc.
	AddKYCDocument(ctx context.Context, in *AddKYCDocumentRequest, opts ...grpc.CallOption) (*AddKYCDocumentResponse, error)
	// AddKYCMedia Add some KYC media for the customer specified by CUSTOMER_ID.
	//KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc.
	AddKYCMedia(ctx context.Context, in *AddKYCMediaRequest, opts ...grpc.CallOption) (*AddKYCMediaResponse, error)
	// AddKYCStatus Add a kyc_status for the customer specified by CUSTOMER_ID.
	//KYC Status is a timeline of the KYC status of the customer
	AddKYCStatus(ctx context.Context, in *AddKYCStatusRequest, opts ...grpc.CallOption) (*AddKYCStatusResponse, error)
	// GetCustomerKYCCheck Get KYC checks for the Customer specified by CUSTOMER_ID.
	GetCustomerKYCCheck(ctx context.Context, in *GetCustomerKYCCheckRequest, opts ...grpc.CallOption) (*GetCustomerKYCCheckResponse, error)
	// GetCustomerKYCDocuments Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID
	//Get a list of documents that affirm the identity of the customer Passport, driving licence etc.
	GetCustomerKYCDocument(ctx context.Context, in *GetCustomerKYCDocumentRequest, opts ...grpc.CallOption) (*GetCustomerKYCDocumentResponse, error)
	// GetCustomerKYCStatuses Get the KYC statuses for a customer specified by CUSTOMER_ID over time.
	GetCustomerKYCStatus(ctx context.Context, in *GetCustomerKYCStatusRequest, opts ...grpc.CallOption) (*GetCustomerKYCStatusResponse, error)
	// GetKYCMedia Get KYC media (scans, pictures, videos) that affirms the identity of the customer.
	GetKYCMedia(ctx context.Context, in *GetKYCMediaRequest, opts ...grpc.CallOption) (*GetKYCMediaResponse, error)
}

type kYCServiceClient struct {
	cc *grpc.ClientConn
}

func NewKYCServiceClient(cc *grpc.ClientConn) KYCServiceClient {
	return &kYCServiceClient{cc}
}

func (c *kYCServiceClient) AddKYCCheck(ctx context.Context, in *AddKYCCheckRequest, opts ...grpc.CallOption) (*AddKYCCheckResponse, error) {
	out := new(AddKYCCheckResponse)
	err := c.cc.Invoke(ctx, "/kyc.KYCService/AddKYCCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kYCServiceClient) AddKYCDocument(ctx context.Context, in *AddKYCDocumentRequest, opts ...grpc.CallOption) (*AddKYCDocumentResponse, error) {
	out := new(AddKYCDocumentResponse)
	err := c.cc.Invoke(ctx, "/kyc.KYCService/AddKYCDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kYCServiceClient) AddKYCMedia(ctx context.Context, in *AddKYCMediaRequest, opts ...grpc.CallOption) (*AddKYCMediaResponse, error) {
	out := new(AddKYCMediaResponse)
	err := c.cc.Invoke(ctx, "/kyc.KYCService/AddKYCMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kYCServiceClient) AddKYCStatus(ctx context.Context, in *AddKYCStatusRequest, opts ...grpc.CallOption) (*AddKYCStatusResponse, error) {
	out := new(AddKYCStatusResponse)
	err := c.cc.Invoke(ctx, "/kyc.KYCService/AddKYCStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kYCServiceClient) GetCustomerKYCCheck(ctx context.Context, in *GetCustomerKYCCheckRequest, opts ...grpc.CallOption) (*GetCustomerKYCCheckResponse, error) {
	out := new(GetCustomerKYCCheckResponse)
	err := c.cc.Invoke(ctx, "/kyc.KYCService/GetCustomerKYCCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kYCServiceClient) GetCustomerKYCDocument(ctx context.Context, in *GetCustomerKYCDocumentRequest, opts ...grpc.CallOption) (*GetCustomerKYCDocumentResponse, error) {
	out := new(GetCustomerKYCDocumentResponse)
	err := c.cc.Invoke(ctx, "/kyc.KYCService/GetCustomerKYCDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kYCServiceClient) GetCustomerKYCStatus(ctx context.Context, in *GetCustomerKYCStatusRequest, opts ...grpc.CallOption) (*GetCustomerKYCStatusResponse, error) {
	out := new(GetCustomerKYCStatusResponse)
	err := c.cc.Invoke(ctx, "/kyc.KYCService/GetCustomerKYCStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kYCServiceClient) GetKYCMedia(ctx context.Context, in *GetKYCMediaRequest, opts ...grpc.CallOption) (*GetKYCMediaResponse, error) {
	out := new(GetKYCMediaResponse)
	err := c.cc.Invoke(ctx, "/kyc.KYCService/GetKYCMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KYCServiceServer is the server API for KYCService service.
type KYCServiceServer interface {
	// AddKYCCheck Add a KYC check for the customer specified by CUSTOMER_ID.
	//KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status.
	AddKYCCheck(context.Context, *AddKYCCheckRequest) (*AddKYCCheckResponse, error)
	// AddKYCDocument Add a KYC document for the customer specified by CUSTOMER_ID.
	//KYC Documents contain the document type (e.g. passport), place of issue, expiry etc.
	AddKYCDocument(context.Context, *AddKYCDocumentRequest) (*AddKYCDocumentResponse, error)
	// AddKYCMedia Add some KYC media for the customer specified by CUSTOMER_ID.
	//KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc.
	AddKYCMedia(context.Context, *AddKYCMediaRequest) (*AddKYCMediaResponse, error)
	// AddKYCStatus Add a kyc_status for the customer specified by CUSTOMER_ID.
	//KYC Status is a timeline of the KYC status of the customer
	AddKYCStatus(context.Context, *AddKYCStatusRequest) (*AddKYCStatusResponse, error)
	// GetCustomerKYCCheck Get KYC checks for the Customer specified by CUSTOMER_ID.
	GetCustomerKYCCheck(context.Context, *GetCustomerKYCCheckRequest) (*GetCustomerKYCCheckResponse, error)
	// GetCustomerKYCDocuments Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID
	//Get a list of documents that affirm the identity of the customer Passport, driving licence etc.
	GetCustomerKYCDocument(context.Context, *GetCustomerKYCDocumentRequest) (*GetCustomerKYCDocumentResponse, error)
	// GetCustomerKYCStatuses Get the KYC statuses for a customer specified by CUSTOMER_ID over time.
	GetCustomerKYCStatus(context.Context, *GetCustomerKYCStatusRequest) (*GetCustomerKYCStatusResponse, error)
	// GetKYCMedia Get KYC media (scans, pictures, videos) that affirms the identity of the customer.
	GetKYCMedia(context.Context, *GetKYCMediaRequest) (*GetKYCMediaResponse, error)
}

// UnimplementedKYCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedKYCServiceServer struct {
}

func (*UnimplementedKYCServiceServer) AddKYCCheck(ctx context.Context, req *AddKYCCheckRequest) (*AddKYCCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddKYCCheck not implemented")
}
func (*UnimplementedKYCServiceServer) AddKYCDocument(ctx context.Context, req *AddKYCDocumentRequest) (*AddKYCDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddKYCDocument not implemented")
}
func (*UnimplementedKYCServiceServer) AddKYCMedia(ctx context.Context, req *AddKYCMediaRequest) (*AddKYCMediaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddKYCMedia not implemented")
}
func (*UnimplementedKYCServiceServer) AddKYCStatus(ctx context.Context, req *AddKYCStatusRequest) (*AddKYCStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddKYCStatus not implemented")
}
func (*UnimplementedKYCServiceServer) GetCustomerKYCCheck(ctx context.Context, req *GetCustomerKYCCheckRequest) (*GetCustomerKYCCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerKYCCheck not implemented")
}
func (*UnimplementedKYCServiceServer) GetCustomerKYCDocument(ctx context.Context, req *GetCustomerKYCDocumentRequest) (*GetCustomerKYCDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerKYCDocument not implemented")
}
func (*UnimplementedKYCServiceServer) GetCustomerKYCStatus(ctx context.Context, req *GetCustomerKYCStatusRequest) (*GetCustomerKYCStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerKYCStatus not implemented")
}
func (*UnimplementedKYCServiceServer) GetKYCMedia(ctx context.Context, req *GetKYCMediaRequest) (*GetKYCMediaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKYCMedia not implemented")
}

func RegisterKYCServiceServer(s *grpc.Server, srv KYCServiceServer) {
	s.RegisterService(&_KYCService_serviceDesc, srv)
}

func _KYCService_AddKYCCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddKYCCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KYCServiceServer).AddKYCCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kyc.KYCService/AddKYCCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KYCServiceServer).AddKYCCheck(ctx, req.(*AddKYCCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KYCService_AddKYCDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddKYCDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KYCServiceServer).AddKYCDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kyc.KYCService/AddKYCDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KYCServiceServer).AddKYCDocument(ctx, req.(*AddKYCDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KYCService_AddKYCMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddKYCMediaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KYCServiceServer).AddKYCMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kyc.KYCService/AddKYCMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KYCServiceServer).AddKYCMedia(ctx, req.(*AddKYCMediaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KYCService_AddKYCStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddKYCStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KYCServiceServer).AddKYCStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kyc.KYCService/AddKYCStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KYCServiceServer).AddKYCStatus(ctx, req.(*AddKYCStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KYCService_GetCustomerKYCCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerKYCCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KYCServiceServer).GetCustomerKYCCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kyc.KYCService/GetCustomerKYCCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KYCServiceServer).GetCustomerKYCCheck(ctx, req.(*GetCustomerKYCCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KYCService_GetCustomerKYCDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerKYCDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KYCServiceServer).GetCustomerKYCDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kyc.KYCService/GetCustomerKYCDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KYCServiceServer).GetCustomerKYCDocument(ctx, req.(*GetCustomerKYCDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KYCService_GetCustomerKYCStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerKYCStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KYCServiceServer).GetCustomerKYCStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kyc.KYCService/GetCustomerKYCStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KYCServiceServer).GetCustomerKYCStatus(ctx, req.(*GetCustomerKYCStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KYCService_GetKYCMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKYCMediaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KYCServiceServer).GetKYCMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kyc.KYCService/GetKYCMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KYCServiceServer).GetKYCMedia(ctx, req.(*GetKYCMediaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KYCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kyc.KYCService",
	HandlerType: (*KYCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddKYCCheck",
			Handler:    _KYCService_AddKYCCheck_Handler,
		},
		{
			MethodName: "AddKYCDocument",
			Handler:    _KYCService_AddKYCDocument_Handler,
		},
		{
			MethodName: "AddKYCMedia",
			Handler:    _KYCService_AddKYCMedia_Handler,
		},
		{
			MethodName: "AddKYCStatus",
			Handler:    _KYCService_AddKYCStatus_Handler,
		},
		{
			MethodName: "GetCustomerKYCCheck",
			Handler:    _KYCService_GetCustomerKYCCheck_Handler,
		},
		{
			MethodName: "GetCustomerKYCDocument",
			Handler:    _KYCService_GetCustomerKYCDocument_Handler,
		},
		{
			MethodName: "GetCustomerKYCStatus",
			Handler:    _KYCService_GetCustomerKYCStatus_Handler,
		},
		{
			MethodName: "GetKYCMedia",
			Handler:    _KYCService_GetKYCMedia_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/kyc/all.proto",
}
